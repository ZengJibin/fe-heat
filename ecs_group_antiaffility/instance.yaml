heat_template_version: 2014-10-16 
 
description: Advanced template to deploy an instance. 
 
parameters: 
  name: 
    type: string 
    label: Name or ID 
    description: Name to be used for compute instance 
    default: ecs_group_antiaffinity_zengjibng
  image: 
    type: string 
    label: Image name or ID 
    description: Image to be used for compute instance 
    default: OBS_U_RHEL_6.8
  flavor: 
    type: string 
    label: flavor name 
    description: Name of flavor to be used for compute instance 
    default: s1.medium
  network: 
    type: string 
    label: Network name or ID 
    description: Network to attach server to. 
    default: bd97c7d6-959c-4060-b460-fedb7416f6a5
  external_network: 
    type: string 
    label: Public FIP pool name or ID 
    description: Network name or ID to allocate floating IP from. 
    default: admin_external_net
  availability_zone: 
    type: string 
    label: AZ ID 
    description: default to AZ1 for HANA. 
    default: as-south-0a
  key_name:
    description: Keypair to inject in instance
    label: SSH Keypair
    type: string
    #default: set_your-own_keypair
    default: KeyPair-502czjb004_2    
  anti_affinity:
    description: ecs group with anti affinity
    label: anti-affinity
    type: string
    #default: set this ECSs antiaffinity server group id,query ecs_group:nova --insecure server-group-list
    default: a1721708-18aa-4920-bcbe-c8035cb03c70
resources: 
  instance_port: 
    type: OS::Neutron::Port 
    properties: 
      network: { get_param: network } 
 
  instance_volume_data: 
    type: OS::Cinder::Volume 
    properties: 
      name: instance_volume_data 
      availability_zone: { get_param: availability_zone } 
      size: 50 
 
  instance_volume_attach: 
    type: OS::Cinder::VolumeAttachment 
    properties: 
      volume_id: { get_resource: instance_volume_data } 
      instance_uuid: { get_resource: instance } 
 
  instance_fip: 
    type: OS::Neutron::FloatingIP 
    properties: 
      floating_network: { get_param: external_network } 
      port_id: { get_resource: instance_port } 
    depends_on: 
      - instance 
  instance: 
    type: OS::Nova::Server 
    properties: 
      key_name: { get_param: key_name } 
      name: { get_param: name }  
      image: { get_param: image } 
      flavor: { get_param: flavor } 
      availability_zone: { get_param: availability_zone } 
      networks: 
        - port: { get_resource: instance_port } 
      scheduler_hints: 
        group: { get_param: anti_affinity }
outputs: 
  id: 
    description: The id of the instance. 
    value: { get_resource: instance } 
  ip: 
    description: The ip address of the instance. 
    value: { get_attr: [instance, first_address] }

